sudo: required

language: go

go:
  - 1.15.7

services:
  - docker

addons:
  postgresql: '12'
  apt:
    packages:
      - postgresql-12-postgis-3

# trying to fix postgis bug which comes on the travis infrastructure that has sudo.
before_install:
  - docker --version
  - export DEBIAN_FRONTEND=noninteractive;
  - export PATH=$PATH:$HOME/.local/bin
  - export GOFLAGS=-mod=vendor

install:
  - sudo -E apt-get -yq update &>> ~/apt-get-update.log;
  - sudo apt-get install -y xsltproc
  - sudo sed -i -e '/local.*peer/s/postgres/all/' -e 's/peer\|md5/trust/g' /etc/postgresql/*/main/pg_hba.conf
  - sudo sed -i 's/port = 5433/port = 5432/' /etc/postgresql/*/main/postgresql.conf
  - sudo systemctl restart postgresql@12-main
  - psql -U postgres -c "create extension postgis"
  - ./etc/scripts/initdb.sh
  - curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin
  - pip install --user awscli
  - eval $(aws ecr get-login --no-include-email --region ap-southeast-2) #needs AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY envvars

stages:
  - test
  - build

jobs:
  include:
  - stage: test
    script:
#      - make -C vendor/github.com/GeoNet/kit/cvendor/libmseed
#      - make -C vendor/github.com/GeoNet/kit/cvendor/libslink
      - test -z "$(gofmt -s -l `find . -name "*.go" | egrep -v vendor` | tee /dev/stderr)"
      - go vet ./...
      - go test -v ./internal/...
      - ./all.sh
      - 'if [ "TRAVIS_SECURE_ENV_VARS" = "true" ]; then bash ./all-integration.sh; fi'
      - golangci-lint run -E gosec # default linters + gosec
  - stage: build
    script:
      - >-
        bash build.sh
        fdsn-ws
        fdsn-holdings-consumer
        fdsn-slink-db
        fdsn-quake-consumer
        fdsn-ws-nrt
    deploy:
      - provider: script
        script: >-
          bash push.sh
          fdsn-ws
          fdsn-holdings-consumer
          fdsn-slink-db
          fdsn-quake-consumer
          fdsn-ws-nrt
        on:
          branch: main

notifications:
  email: false
  slack:
    if: branch in (main, staging, production)
    on_success: never
    on_failure: always
    on_pull_requests: false
    secure: ORAvJSxRCtRUhc6oca4LaWg1ZDoau1ylBawVNRCj5aN2sTc6SYTDgQmk1vguyuRMZqg2OUVinpNxBtxpol0mhzqcnuR6hg74syWL1CJaLR6zzZQZrdMq5PhzudeJ/ScoJeMF4puExD7oh03NyY76xSDjP1PSOTE1XetGlXE/OSmr7bATiwgVQn9Qo+lxJWRgVNOUUcCPxjaXbKMrMMQupuFR1pvViI7U8ShQETQ1Vq9dqQxlStG2KpijGmQtYgSdJw2zFSS5XPnba2ju7HBMq6IBP5zOhXmUSl1NRsDnP0Tj91ndPkUJeG2toIF15I5Ajxp+JbfIBLkuUNXd0Qp+DpGmfMKWPFf4gsKDtaqN78WR9eMqHbXxNFhbPMIFSaD7gYAhcEYSVq5CbaOtQflU6Sg0tADLIws91Vsdh+KzQifmKOgkf7YBiCUCm3zbO665lDSUl7UjVl8XDb/pf4Nrl6C3pvxaNVCeq+Xcf3s3BwknfvL7MB8wQTkn6Nkhim8JuQGsT69TzDkvzr12skBcPo+zlnYsqQ4Hc5bzM5Sq+BzQMq6dnQpUazstaaPQhbcttyacIWWzlvD4iGOhCUqtfFNkk2AYNgO4DuR6chojbdrwhoRFrFmR1a4rXjDNyYT3EPxTVOZ6QrpgYyx0xNvaUWRI8bkfYNiheT/rNEiCpxo=

env:
  global:
    - secure: "kkRVQTVQnE4kdtcODtxokpbU3sXz3/hKR4P28DL5N2zT9mRdomClpIWyCmumlQHXuIyDwVqrUzH+eqP4wPhwjI7NtdHf7wKLqOpWuKI3dyGClYp7gmPBDiZYu9UQ+qi1pnal4J7G5w8XD5S6NJSgR0mgkn6EAdqTxtWJdFBXnt2oVX5+pB2umeSZ42DKDKqCBRjffpI7Wt4efp25sG1M2/CJYJ1VqYOQHRo2lnUexp9IT2vIWvU0igGCnHAyvt62/6P6gUBZwdVea7Ljuujn/mg8LZlnjhDKXNlgZK7BBAz6TrSVQFg/FDGPlxveDTrzDne3mDwv7y1at667I6JeIzuNrhwrNFgGsg3z8H7zuYxFqbTF6ohpRFaKdB+0P/y5BAMe/yruu2SPktbhPF0a/6MfZf6SNLFVBgdZm8BAK9bQkDzQ1m1zckxtjfxSvGfbqT71nizC8yWZ7ZwnePd86lINQgJ6KOFtB32w53i1mUBc7gEZuOjo6yhtxse1wnEqLcr3OjJjabdlVU9+uZz1D/dm6o2J9AKEPL4IIjccvv0Jy8KX9A0Em5XCokvM28PNgvzNsn4cwbjsIxOGZVPI2m047kQsxyrm09t7QFlGo4thi5GrkxI1q7qEmr879AI85HsnFI5rHoMGIybR1ulc8jpNf4F67bRijkCEHoCKFEg=" #AWS_ACCESS_KEY_ID
    - secure: "X8AEiJiPGbFQoYobX0bTE+W46VLZx28Bb2FzdigBGuA8SXCj6SIqpaXPEdJmUwlJ1SZga0pa6y3vgxMbhOhYUBHlkH9QPWWLRRpMsAzJ25pKrcMqu25tfR2XTlRqVx5x4/UJ1vhg3f5VUK1k6Ugk05O43HOaQDfaGFhORYNNCiTVuDLA+sKpGssRPqWlHFBXy85HJUjwK4seufaxANypctDAsUCHNbtI92u09u3mHCV1uqOZSYFXKe2Oh2sotWNO/+SxsZ2VNu/E+56n+YHd8m4ngqC6xc3CENoy6nqsXcj/dDzuPQMjk55bowPl98RjpjZz2M89/GTMEoc+ZHtgWpwnRzGJRGpA3m1jJLEMkgHHxuy4DNZp9eaEABWNPGnrRAUK4nDF9MC4Q/0BhvYFt3W/p5vPzN5CdNjhGT3fQGV/7q55AJKPCCoeTV4Z9O1ktTSLwnmA2+TeWtNtlHC5aVyBzThe0ZzB0jYOjeCJfa52nXZNtmbNmG2wz8bUx55BOpnG2KiIyBkrGmIAB7kSkgHM9AirDoHxo5Dh3huocdhAag9gU10JaO9p14tMJ3vnjJqK96vEDTreSki7tNHdUicrPTGTf1ZCUShwrOFViCKrOEqJ6GjFb5eT4WtOiIO2hxKE6kdFJIixJSy5o9QelPMNVjQLGRH22DM1FgZjIlM=" #AWS_SECRET_ACCESS_KEY
