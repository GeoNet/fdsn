language: go

go:
  - 1.13.1

services:
  - docker

addons:
  postgresql: '9.6'

# trying to fix postgis bug which comes on the travis infrastructure that has sudo.
before_install:
  - docker --version
  - export DEBIAN_FRONTEND=noninteractive;

install:
  - sudo -E apt-get -yq update &>> ~/apt-get-update.log;
  - sudo -E apt-get -yq --no-install-suggests --no-install-recommends --force-yes install postgresql-9.6-postgis-2.4
  - sudo apt-get install -y xsltproc
  - pip install --user awscli
  - eval $(aws ecr get-login --no-include-email --region ap-southeast-2) #needs AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY envvars
  - export PATH=$PATH:$HOME/.local/bin
  - export GOFLAGS=-mod=vendor
  - psql -U postgres -c "create extension postgis"
  - ./etc/scripts/initdb.sh
  - curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.18.0

before_script:
  - make -C vendor/github.com/GeoNet/kit/cvendor/libmseed
  - make -C vendor/github.com/GeoNet/kit/cvendor/libslink
  - test -z "$(gofmt -s -l `find . -name "*.go" | egrep -v vendor` | tee /dev/stderr)"
  - go vet ./...
  - go test -v ./internal/...
  - ./all.sh
  - 'if [ "TRAVIS_SECURE_ENV_VARS" = "true" ]; then bash ./all-integration.sh; fi'
  - golangci-lint run -E gosec # default linters + gosec

script:
  - ./build.sh fdsn-quake-consumer fdsn-ws fdsn-holdings-consumer fdsn-ws-nrt fdsn-slink-db

deploy:
   - provider: script
     skip_cleanup: true
     script: ./push.sh fdsn-quake-consumer fdsn-ws fdsn-holdings-consumer fdsn-ws-nrt fdsn-slink-db
     on: 
       branch: main

notifications:
  email: false
  slack:
    if: branch in (main, staging, production)
    on_success: never
    on_failure: always
    on_pull_requests: false
    secure: ORAvJSxRCtRUhc6oca4LaWg1ZDoau1ylBawVNRCj5aN2sTc6SYTDgQmk1vguyuRMZqg2OUVinpNxBtxpol0mhzqcnuR6hg74syWL1CJaLR6zzZQZrdMq5PhzudeJ/ScoJeMF4puExD7oh03NyY76xSDjP1PSOTE1XetGlXE/OSmr7bATiwgVQn9Qo+lxJWRgVNOUUcCPxjaXbKMrMMQupuFR1pvViI7U8ShQETQ1Vq9dqQxlStG2KpijGmQtYgSdJw2zFSS5XPnba2ju7HBMq6IBP5zOhXmUSl1NRsDnP0Tj91ndPkUJeG2toIF15I5Ajxp+JbfIBLkuUNXd0Qp+DpGmfMKWPFf4gsKDtaqN78WR9eMqHbXxNFhbPMIFSaD7gYAhcEYSVq5CbaOtQflU6Sg0tADLIws91Vsdh+KzQifmKOgkf7YBiCUCm3zbO665lDSUl7UjVl8XDb/pf4Nrl6C3pvxaNVCeq+Xcf3s3BwknfvL7MB8wQTkn6Nkhim8JuQGsT69TzDkvzr12skBcPo+zlnYsqQ4Hc5bzM5Sq+BzQMq6dnQpUazstaaPQhbcttyacIWWzlvD4iGOhCUqtfFNkk2AYNgO4DuR6chojbdrwhoRFrFmR1a4rXjDNyYT3EPxTVOZ6QrpgYyx0xNvaUWRI8bkfYNiheT/rNEiCpxo=
