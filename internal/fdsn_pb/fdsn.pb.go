// Code generated by protoc-gen-go.
// source: fdsn.proto
// DO NOT EDIT!

/*
Package fdsn_pb is a generated protocol buffer package.

It is generated from these files:
	fdsn.proto

It has these top-level messages:
	Mseed
	Record
	NSLC
	Listing
*/
package fdsn_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Mseed struct {
	Records []*Record `protobuf:"bytes,4,rep,name=records" json:"records,omitempty"`
}

func (m *Mseed) Reset()                    { *m = Mseed{} }
func (m *Mseed) String() string            { return proto.CompactTextString(m) }
func (*Mseed) ProtoMessage()               {}
func (*Mseed) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Mseed) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

type Record struct {
	// Unix time in nanoseconds.
	Start int64 `protobuf:"varint,1,opt,name=start" json:"start,omitempty"`
	// Unix time in nanoseconds.
	End int64 `protobuf:"varint,2,opt,name=end" json:"end,omitempty"`
	// the record number in an mSEED file.
	Number int64 `protobuf:"varint,3,opt,name=number" json:"number,omitempty"`
	// the path to a single record file
	Path string `protobuf:"bytes,4,opt,name=path" json:"path,omitempty"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Record) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Record) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *Record) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Record) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type NSLC struct {
	Network  string `protobuf:"bytes,1,opt,name=Network,json=network" json:"Network,omitempty"`
	Station  string `protobuf:"bytes,2,opt,name=Station,json=station" json:"Station,omitempty"`
	Location string `protobuf:"bytes,3,opt,name=Location,json=location" json:"Location,omitempty"`
	Channel  string `protobuf:"bytes,4,opt,name=Channel,json=channel" json:"Channel,omitempty"`
}

func (m *NSLC) Reset()                    { *m = NSLC{} }
func (m *NSLC) String() string            { return proto.CompactTextString(m) }
func (*NSLC) ProtoMessage()               {}
func (*NSLC) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *NSLC) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *NSLC) GetStation() string {
	if m != nil {
		return m.Station
	}
	return ""
}

func (m *NSLC) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *NSLC) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

type Listing struct {
	Channels []*NSLC `protobuf:"bytes,2,rep,name=channels" json:"channels,omitempty"`
}

func (m *Listing) Reset()                    { *m = Listing{} }
func (m *Listing) String() string            { return proto.CompactTextString(m) }
func (*Listing) ProtoMessage()               {}
func (*Listing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Listing) GetChannels() []*NSLC {
	if m != nil {
		return m.Channels
	}
	return nil
}

func init() {
	proto.RegisterType((*Mseed)(nil), "fdsn.Mseed")
	proto.RegisterType((*Record)(nil), "fdsn.Record")
	proto.RegisterType((*NSLC)(nil), "fdsn.NSLC")
	proto.RegisterType((*Listing)(nil), "fdsn.Listing")
}

func init() { proto.RegisterFile("fdsn.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x3c, 0x90, 0x4d, 0x4b, 0xc4, 0x30,
	0x10, 0x86, 0xe9, 0x26, 0xdb, 0xb4, 0xa3, 0x07, 0x19, 0x44, 0x82, 0xa7, 0xd2, 0xc3, 0xd2, 0xd3,
	0x8a, 0xfa, 0x0f, 0xdc, 0x6b, 0xdd, 0x43, 0xf6, 0x26, 0x82, 0xf4, 0x23, 0xba, 0xc5, 0x9a, 0x94,
	0x24, 0xe2, 0xdf, 0x97, 0x4c, 0xaa, 0xb7, 0x79, 0x9e, 0x37, 0xc9, 0x84, 0x17, 0xe0, 0x7d, 0xf4,
	0x66, 0xbf, 0x38, 0x1b, 0x2c, 0xf2, 0x38, 0xd7, 0x77, 0xb0, 0x7d, 0xf6, 0x5a, 0x8f, 0xb8, 0x03,
	0xe1, 0xf4, 0x60, 0xdd, 0xe8, 0x25, 0xaf, 0x58, 0x73, 0xf1, 0x70, 0xb9, 0xa7, 0xc3, 0x8a, 0xa4,
	0xfa, 0x0b, 0xeb, 0x57, 0xc8, 0x93, 0xc2, 0x6b, 0xd8, 0xfa, 0xd0, 0xb9, 0x20, 0xb3, 0x2a, 0x6b,
	0x98, 0x4a, 0x80, 0x57, 0xc0, 0xb4, 0x19, 0xe5, 0x86, 0x5c, 0x1c, 0xf1, 0x06, 0x72, 0xf3, 0xfd,
	0xd5, 0x6b, 0x27, 0x19, 0xc9, 0x95, 0x10, 0x81, 0x2f, 0x5d, 0x38, 0x4b, 0x5e, 0x65, 0x4d, 0xa9,
	0x68, 0xae, 0x17, 0xe0, 0xc7, 0x53, 0x7b, 0x40, 0x09, 0xe2, 0xa8, 0xc3, 0x8f, 0x75, 0x9f, 0xf4,
	0x7a, 0xa9, 0x84, 0x49, 0x18, 0x93, 0x53, 0xe8, 0xc2, 0x64, 0x0d, 0xed, 0x28, 0x95, 0xf0, 0x09,
	0xf1, 0x16, 0x8a, 0xd6, 0x0e, 0x29, 0x62, 0x14, 0x15, 0xf3, 0xca, 0xf1, 0xd6, 0xe1, 0xdc, 0x19,
	0xa3, 0xe7, 0x75, 0x9d, 0x18, 0x12, 0xd6, 0xf7, 0x20, 0xda, 0xc9, 0x87, 0xc9, 0x7c, 0xe0, 0x0e,
	0x8a, 0xd5, 0x7a, 0xb9, 0xa1, 0x0e, 0x20, 0x75, 0x10, 0xbf, 0xa4, 0xfe, 0xb3, 0xa7, 0xf2, 0x45,
	0x44, 0xfd, 0xb6, 0xf4, 0x7d, 0x4e, 0x5d, 0x3e, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x84, 0x87,
	0xd3, 0x47, 0x59, 0x01, 0x00, 0x00,
}
